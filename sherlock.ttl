# Copyright (c) 2015 Hanspeter Portner (dev@open-music-kontrollers.ch)
#
# This is free software: you can redistribute it and/or modify
# it under the terms of the Artistic License 2.0 as published by
# The Perl Foundation.
#
# This source is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# Artistic License 2.0 for more details.
#
# You should have received a copy of the Artistic License 2.0
# along the source as a COPYING file. If not, obtain it from
# http://www.perlfoundation.org/artistic_license_2_0.

@prefix owl:	<http://www.w3.org/2002/07/owl#> .
@prefix foaf:	<http://xmlns.com/foaf/0.1/> .
@prefix doap:	<http://usefulinc.com/ns/doap#> .
@prefix lv2:	<http://lv2plug.in/ns/lv2core#> .
@prefix ui:		<http://lv2plug.in/ns/extensions/ui#> .
@prefix atom:	<http://lv2plug.in/ns/ext/atom#> .
@prefix ui:   <http://lv2plug.in/ns/extensions/ui#> .
@prefix midi:	<http://lv2plug.in/ns/ext/midi#> .
@prefix time: <http://lv2plug.in/ns/ext/time#> .
@prefix kx:		<http://kxstudio.sf.net/ns/lv2ext/external-ui#> .

@prefix osc:	<http://opensoundcontrol.org#> .
@prefix lic:	<http://opensource.org/licenses/> .
@prefix omk:	<http://open-music-kontrollers.ch/ventosus#> .
@prefix proj:	<http://open-music-kontrollers.ch/lv2/> .
@prefix sherlock:	<http://open-music-kontrollers.ch/lv2/sherlock#> .
@prefix chim:	<http://open-music-kontrollers.ch/lv2/chimaera#> .

# Maintainer
omk:me
	a foaf:Person ;
	foaf:name "Hanspeter Portner" ;
	foaf:mbox <dev@open-music-kontrollers.ch> ;
	foaf:homepage <http://open-music-kontrollers.ch> .

# Project
proj:sherlock
	a doap:Project ;
	doap:maintainer omk:me ;
	doap:name "Sherlock Bundle" .

# Atom Inspector UI
sherlock:atom_inspector_eo
	a ui:EoUI ;
	ui:portNotification [
		ui:plugin sherlock:atom_inspector ;
		lv2:symbol "notify" ;
		ui:protocol atom:eventTransfer ;
	] .
sherlock:atom_inspector_ui
	a ui:UI ;
	ui:portNotification [
		ui:plugin sherlock:atom_inspector ;
		lv2:symbol "notify" ;
		ui:protocol atom:eventTransfer ;
	] ;
	lv2:requiredFeature ui:idleInterface ;
  lv2:extensionData ui:idleInterface, ui:showInterface .
sherlock:atom_inspector_x11
	a ui:X11UI ;
	ui:portNotification [
		ui:plugin sherlock:atom_inspector ;
		lv2:symbol "notify" ;
		ui:protocol atom:eventTransfer ;
	] ;
	lv2:requiredFeature ui:idleInterface ;
	lv2:optionalFeature ui:resize ;
  lv2:extensionData ui:idleInterface .
sherlock:atom_inspector_kx
	a kx:Widget ;
	ui:portNotification [
		ui:plugin sherlock:atom_inspector ;
		lv2:symbol "notify" ;
		ui:protocol atom:eventTransfer ;
	] ;
	lv2:requiredFeature kx:Host .

# Atom Inspector Plugin
sherlock:atom_inspector
	a lv2:Plugin,
		lv2:AnalyserPlugin ;
	doap:name "Sherlock Atom Inspector" ;
	doap:license lic:Artistic-2.0 ;
	lv2:project proj:sherlock ;
	lv2:optionalFeature lv2:isLive, lv2:hardRTCapable ;

	lv2:port [
		# input event port
	  a lv2:InputPort ,
			atom:AtomPort ;
		atom:bufferType atom:Sequence ;
		atom:supports midi:MidiEvent ;
		atom:supports time:Position ;
		atom:supports atom:Blank ;
		atom:supports atom:Bool ;
		atom:supports atom:Chunk ;
		atom:supports atom:Double ;
		atom:supports atom:Float ;
		atom:supports atom:Int ;
		atom:supports atom:Long ;
		atom:supports atom:Literal ;
		atom:supports atom:Object ;
		atom:supports atom:Path ;
		atom:supports atom:Property ;
		atom:supports atom:Resource ;
		atom:supports atom:Sequence ;
		atom:supports atom:String ;
		atom:supports atom:Tuple ;
		atom:supports atom:URI ;
		atom:supports atom:URID ;
		atom:supports atom:Vector ;
		lv2:index 0 ;
		lv2:symbol "control_in" ;
		lv2:name "Control In" ;
		lv2:designation lv2:control ;
	] , [
		# output event port
	  a lv2:OutputPort ,
			atom:AtomPort ;
		atom:bufferType atom:Sequence ;
		atom:supports midi:MidiEvent ;
		atom:supports time:Position ;
		atom:supports atom:Blank ;
		atom:supports atom:Bool ;
		atom:supports atom:Chunk ;
		atom:supports atom:Double ;
		atom:supports atom:Float ;
		atom:supports atom:Int ;
		atom:supports atom:Long ;
		atom:supports atom:Literal ;
		atom:supports atom:Object ;
		atom:supports atom:Path ;
		atom:supports atom:Property ;
		atom:supports atom:Resource ;
		atom:supports atom:Sequence ;
		atom:supports atom:String ;
		atom:supports atom:Tuple ;
		atom:supports atom:URI ;
		atom:supports atom:URID ;
		atom:supports atom:Vector ;
		lv2:index 1 ;
		lv2:symbol "control_out" ;
		lv2:name "Control Out" ;
		lv2:designation lv2:control ;
	] , [
		# output notify port
	  a lv2:OutputPort ,
			atom:AtomPort ;
		atom:bufferType atom:Sequence ;
		atom:supports atom:Sequence ;
		lv2:index 2 ;
		lv2:symbol "notify" ;
		lv2:name "Notify" ;
	] .
